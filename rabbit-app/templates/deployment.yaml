apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name.app }}
  labels:
    app: {{ .Values.name.app }}
  annotations:
spec:
  selector:
    matchLabels:
      app: {{ .Values.name.app }}
  replicas: {{ .Values.spec.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.name.app }}
    spec:
      containers:
      - name: {{ .Values.name.container.rabbit }}
        image: {{ .Values.deployment.image.rabbit }}:{{ .Values.deployment.tag.rabbit }}
        lifecycle:
          postStart:
            exec:
              command: [ "/bin/sh", "-c", "rabbitmq-plugins --offline enable rabbitmq_management rabbitmq_peer_discovery_k8s" ]
        imagePullPolicy: Always
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
                fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
          - name: amqp
            containerPort: 5672
            protocol: TCP
          - name: management
            containerPort: 15672
            protocol: TCP
        volumeMounts:
        - name: {{ .Values.name.volumes.secret }}
          mountPath: /etc/secret-volume
      - name: {{ .Values.name.container.publisher }}
        image: {{ .Values.deployment.image.publisher }}:{{ .Values.deployment.tag.publisher }}
        imagePullPolicy: Always
        env:
        - name: MY_POD_NAME
          valueFrom:
              fieldRef:
                  fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RABBIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name.secret }}
              key: username
              optional: false
        - name: RABBIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.name.secret }}
              key: password
              optional: false
        ports:
          - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
      - name: {{ .Values.name.container.consumer }}
        image: {{ .Values.deployment.image.consumer }}:{{ .Values.deployment.tag.consumer }}
        imagePullPolicy: Always
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: RABBIT_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.name.secret }}
                key: username
                optional: false
          - name: RABBIT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.name.secret }}
                key: password
                optional: false
      volumes:
      - name: {{ .Values.name.volumes.secret }}
        secret:
          secretName: {{ .Values.name.secret }}
