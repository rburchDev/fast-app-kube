apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbit
  labels:
    app: api-app
  annotations:
spec:
  selector:
    matchLabels:
      app: api-app
  replicas: 1
  template:
    metadata:
      labels:
        app: api-app
    spec:
      containers:
      - name: rabbit-1
        image: bitnami/rabbitmq:latest
        lifecycle:
          postStart:
            exec:
              command: [ "/bin/sh", "-c", "rabbitmq-plugins --offline enable rabbitmq_management rabbitmq_peer_discovery_k8s" ]
        imagePullPolicy: Always
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
                fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
          - name: amqp
            containerPort: 5672
            protocol: TCP
          - name: management
            containerPort: 15672
            protocol: TCP
        volumeMounts:
        - name: secret-volume
          mountPath: /etc/secret-volume
      - name: rabbit-publisher
        image: artifactory.charterlab.com/naas-eagles-docker-local/fast/rabbitmq/rabbitmq-publisher:1.4.0
        imagePullPolicy: Always
        env:
        - name: MY_POD_NAME
          valueFrom:
              fieldRef:
                  fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RABBIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: api-secret
              key: username
              optional: false
        - name: RABBIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api-secret
              key: password
              optional: false
        ports:
          - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
      - name: rabbit-consumer
        image: artifactory.charterlab.com/naas-eagles-docker-local/fast/rabbitmq/rabbitmq-consumer:1.4.0
        imagePullPolicy: Always
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: RABBIT_USERNAME
            valueFrom:
              secretKeyRef:
                name: api-secret
                key: username
                optional: false
          - name: RABBIT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: api-secret
                key: password
                optional: false
      volumes:
      - name: secret-volume
        secret:
          secretName: api-secret

---
apiVersion: v1
kind: Service
metadata:
  name: rabbit-api
spec:
  type: LoadBalancer
  selector:
    app: api-app
  ports:
  - name: rabbit-management
    protocol: TCP
    port: 8086
    targetPort: 15672
  - name: api
    protocol: TCP
    port: 3000
    targetPort: 3000

---
apiVersion: v1
kind: Secret
metadata:
  name: api-secret
type: Opaque
data:
  username: dXNlcg==
  password: Yml0bmFtaQ==

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-list
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: pods-list
  apiGroup: rbac.authorization.k8s.io